{"version":3,"sources":["webpack:///./src/applets/ebcsv/views/config-views/edit.coffee"],"names":["AppChannel","Backbone","BaseFormDataView","BootstrapFormView","EditFormView","MessageChannel","NewFormView","OptFieldNames","ReqFieldNames","csvfields_form","csvfields_form_data","form_group_input_div","make_field_input","make_field_select","make_form_input","mkInputData","navigate_to_url","tc","__webpack_require__","default","Radio","channel","request","format","field","label","placeholder","input_id","input_attributes","name","location","returnsacceptedoption","duration","quantity","startprice","dispatchtimemax","conditionid","postalcode","paymentprofilename","returnprofilename","shippingprofilename","scheduletime","renderable","fdata","model","idata","settings","value","content","div","i","len","results","length","input","type","[object Object]","data","this","form_data","ui","val","set","console","log","get","id","template","module","exports"],"mappings":"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","file":"ebcsv-edit-config-95234e5edae6f11ac19a.js","sourcesContent":["Backbone = require 'backbone'\nMarionette = require 'backbone.marionette'\ntc = require 'teacup'\nmarked = require 'marked'\n\nBootstrapFormView = require('tbirds/views/bsformview').default\nnavigate_to_url = require('tbirds/util/navigate-to-url').default\n{ form_group_input_div } = require 'tbirds/templates/forms'\n{ make_field_input\n  make_field_select } = require 'tbirds/templates/forms'\n\nMessageChannel = Backbone.Radio.channel 'messages'\nAppChannel = Backbone.Radio.channel 'ebcsv'\n\nReqFieldNames = AppChannel.request 'csv-req-fieldnames'\nOptFieldNames = AppChannel.request 'csv-opt-fieldnames'\n\nmkInputData = (field, label, placeholder) ->\n  input_id: \"input_#{field}\"\n  label: label\n  input_attributes:\n    name: field\n    placeholder: placeholder\n\ncsvfields_form_data =\n  format: mkInputData 'format', 'Format', 'FixedPrice'\n  location: mkInputData 'location', 'Location', '90210'\n  returnsacceptedoption: mkInputData 'returnsacceptedoption',\n  'Returns Accepted Option', 'ReturnsAccepted'\n  duration: mkInputData 'duration', 'Duration', 'GTC'\n  quantity: mkInputData 'quantity', 'Quantity', '1'\n  startprice: mkInputData 'startprice', 'Start Price', '1.25'\n  dispatchtimemax: mkInputData 'dispatchtimemax', 'Dispatch Time Max', '2'\n  conditionid: mkInputData 'conditionid', 'Condition ID', '0'\n  postalcode: mkInputData 'postalcode', 'Postal Code', '90210'\n  paymentprofilename: mkInputData 'paymentprofilename',\n  'Payment Profile Name', 'PayNowPal'\n  returnprofilename: mkInputData 'returnprofilename',\n  'Return Profile Name', 'Return30ExChangeReStock20'\n  shippingprofilename: mkInputData 'shippingprofilename',\n  'Shipping Profile Name', 'Raw Comic Shipments'\n  scheduletime: mkInputData 'scheduletime', 'Listing Delay Time', '0d'\n  \nmake_form_input = tc.renderable (field, fdata, model) ->\n  settings = model.content or {}\n  idata = fdata[field]\n  value = settings[field]\n  #console.log \"settings[#{field}] is\", value\n  if value? and value isnt ''\n    #console.log \"Value is\", value\n    idata.input_attributes.value = settings[field]\n  else\n    #console.log 'use placeholder', field, idata\n    idata.input_attributes.value = idata.input_attributes.placeholder\n  form_group_input_div idata\n\ncsvfields_form = tc.renderable (model) ->\n  tc.div '.panel.panel-default', ->\n    tc.div '.panel-heading', 'Config Name'\n    tc.div '.panel-body', ->\n      #form_group_input_div mkInputData 'name', 'Config Name', 'default'\n      make_field_input('name')(model)\n  tc.div '.panel.panel-default', ->\n    tc.div '.panel-heading', 'Required Fields'\n    tc.div '.panel-body', ->\n      for field in ReqFieldNames\n        make_form_input field, csvfields_form_data, model\n  tc.div '.panel.panel-default', ->\n    tc.div '.panel-heading', 'Optional Fields'\n    tc.div '.panel-body', ->\n      for field in OptFieldNames\n        make_form_input field, csvfields_form_data, model\n  tc.input '.btn.btn-default', type:'submit', value:'Submit'\n\nclass BaseFormDataView extends BootstrapFormView\n  ui: ->\n    data = {}\n    for field of @form_data\n      data[field] = \"[name=\\\"#{field}\\\"]\"\n    data.name = '[name=\"name\"]'\n    return data\n    \n  updateModel: ->\n    data = {}\n    for field of @form_data\n      data[field] = @ui[field].val()\n    @model.set 'content', data\n    @model.set 'name', @ui.name.val()\n    console.log \"@model\", @model\n    \n  onSuccess: (model) ->\n    name = model.get 'name'\n    MessageChannel.request 'success', \"#{name} saved successfully.\"\n    navigate_to_url \"#ebcsv/configs/view/#{model.id}\"\n    \n\n########################################\nclass EditFormView extends BaseFormDataView\n  template: csvfields_form\n  form_data: csvfields_form_data\n\n  # model should be set by controller\n  createModel: ->\n    @model\n\nclass NewFormView extends BaseFormDataView\n  template: csvfields_form\n  form_data: csvfields_form_data\n  \n  createModel: ->\n    cfgs = AppChannel.request 'get_local_configs'\n    return new cfgs.model\n\nmodule.exports =\n  EditFormView: EditFormView\n  NewFormView: NewFormView\n  \n\n"],"sourceRoot":""}