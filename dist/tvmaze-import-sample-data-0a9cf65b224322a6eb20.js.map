{"version":3,"sources":["webpack:///./node_modules/tbirds/src/views/simple-progress.coffee","webpack:///./src/applets/tvmaze/views/sample-data-import.coffee"],"names":["ProgressModel","ProgressView","teacup__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","teacup__WEBPACK_IMPORTED_MODULE_2___default","n","backbone__WEBPACK_IMPORTED_MODULE_0___default","a","Model","defaults","valuemin","valuemax","valuenow","backbone_marionette__WEBPACK_IMPORTED_MODULE_1___default","View","template","renderable","model","div","width","Math","floor","role","style","span","modelEvents","change","AppChannel","Backbone","MainView","Marionette","MessageChannel","ShowView","data","itemTemplate","mainTemplate","map","navigate_to_url","saveEpisodes","shows","tc","boundMethodCheck","instance","Constructor","Error","default","console","log","Radio","channel","Collection","ImportManager","Object","initialize","this","bind","[object Object]","options","progressModel","channelName","collection","showID","navigate","promises","models","forEach","p","id","get","show_id","content","toJSON","request","push","Promise","all","then","length","li","href","name","button","post","h1","input","type","label","for","ul","trigger","triggerMethod","remove","event","preventDefault","ui","deleteButton","importSingleAnchor","events","click @ui.deleteButton","click @ui.importSingleAnchor","triggers","counter","local_shows","removals","view","importProgressModel","set","CollectionView","childView","childViewTriggers","item:deleted","import:show","onChildItemDeleted","onChildImportShow","includeEpisodes","show","prop","fetch","done","result","ecoll","showChildView","importButton","hide","statusDiv","importAnotherShow","rshow","text","setTimeout","importShow","showList","importProgress","regions","click @ui.importButton","module","exports"],"mappings":"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","file":"tvmaze-import-sample-data-0a9cf65b224322a6eb20.js","sourcesContent":["import Backbone from 'backbone'\nimport Marionette from 'backbone.marionette'\nimport tc from 'teacup'\n\nclass ProgressModel extends Backbone.Model\n  defaults:\n    valuemin: 0\n    valuemax: 100\n    valuenow: 0\n\nclass ProgressView extends Marionette.View\n  template: tc.renderable (model) ->\n    tc.div '.progress', ->\n      aria =\n        valuemin: model.valuemin\n        valuemax: model.valuemax\n        valuenow: model.valuenow\n      width = Math.floor model.valuenow / model.valuemax * 100 + 0.5\n      tc.div '.progress-bar.progress-bar-striped',\n      role:'progressbar',\n      style:\"width: #{width}%\", ->\n        tc.span style:\"color:black;\",\n        \"#{model.valuenow} of #{model.valuemax}.\"\n  modelEvents:\n    'change': 'render'\n    \n    \nexport {\n  ProgressModel\n  ProgressView\n  }\n","{ map } = require 'underscore'\n$ = require 'jquery'\nBackbone = require 'backbone'\nMarionette = require 'backbone.marionette'\ntc = require 'teacup'\nmarked = require 'marked'\n\nnavigate_to_url = require('tbirds/util/navigate-to-url').default\n{ ProgressModel\n  ProgressView } = require 'tbirds/views/simple-progress'\n\nconsole.log \"ProgressModel\", ProgressModel\nconsole.log \"ProgressView\", ProgressView\n\nMainChannel = Backbone.Radio.channel 'global'\nMessageChannel = Backbone.Radio.channel 'messages'\nAppChannel = Backbone.Radio.channel 'tvmaze'\n\ndata = require '../../../../assets/dev/myshows.json'\nconsole.log data\n\nshows = new Backbone.Collection data\nconsole.log \"Shows\", shows\n\n\nclass ImportManager extends Marionette.Object\n  channelName: 'tvmaze'\n  collection: shows\n  initialize: (options) =>\n    @progressModel = options.progressModel\n    \nsaveRemoteShow = (id) ->\n  show = AppChannel.request 'get-remote-show', id\n  response = show.fetch()\n  response.done ->\n    p = AppChannel.request 'save-local-show', show.toJSON()\n    return p\n  return response\n\nsaveEpisodes = (collection, showID, navigate) ->\n  promises = []\n  collection.models.forEach (model) ->\n    data =\n      id: model.get 'id'\n      show_id: showID\n      content: model.toJSON()\n    p = AppChannel.request 'save-local-episode', data\n    promises.push p\n  Promise.all(promises).then (data) ->\n    if promises.length and navigate\n      navigate_to_url \"#tvmaze/shows/view/#{showID}\"\n    MessageChannel.request 'success', \"Retrieved #{promises.length} episodes.\"\n  \n\nitemTemplate = tc.renderable (model) ->\n  itemBtn = '.btn.btn-sm'\n  tc.li '.list-group-item', ->\n    tc.span ->\n      tc.a '.import-single-show', href:\"#\", model.name\n    tc.span '.btn-group.pull-right', ->\n      tc.button '.delete-item.btn.btn-sm.btn-danger.fa.fa-close', 'delete'\n    \n\nmainTemplate = tc.renderable (post) ->\n  tc.div '.body.col-md-6', ->\n    tc.h1 'TV Maze Sample Data'\n    tc.div '.form-inline', ->\n      tc.div '.form-check', ->\n        tc.input '#include-episodes.form-check-input', type:'checkbox'\n        tc.label '.form-check-label', for:'include-episodes', 'Include episodes'\n      tc.button '.import-button.btn.btn-primary.btn-sm', 'Import Data'\n    tc.div '.status-div.alert.alert-info', style:'display:none'\n    tc.div '.import-progress'\n    tc.ul '.show-list.list-group'\n\nclass ShowView extends Marionette.View\n  channelName: 'tvmaze'\n  template: itemTemplate\n  ui:\n    deleteButton: '.delete-item'\n    importSingleAnchor: '.import-single-show'\n  events:\n    'click @ui.deleteButton': 'deleteItem'\n    'click @ui.importSingleAnchor': 'importShow'\n  triggers:\n    'click @ui.deleteButton': 'item:deleted'\n    'click @ui.importSingleAnchor': 'import:show'\n  deleteItem: ->\n    @trigger 'item:deleted', @model\n    @triggerMethod 'item:deleted', @model\n    @model.collection.remove @model\n  importShow: (event) ->\n    event.preventDefault()\n    \nclass MainView extends Marionette.View\n  channelName: 'tvmaze'\n  template: mainTemplate\n  ui:\n    showList: '.show-list'\n    statusDiv: '.status-div'\n    importProgress: '.import-progress'\n    importButton: '.import-button'\n    includeEpisodes: '#include-episodes'\n  regions:\n    showList: '@ui.showList'\n    importProgress: '@ui.importProgress'\n  events:\n    'click @ui.importButton': 'importShows'\n  onRender: ->\n    local_shows = AppChannel.request 'get-local-tvshows'\n    models = shows.models\n    console.log \"SHOWS\", shows, shows.models[0]\n    counter = 0\n    removals = []\n    while counter < shows.length\n      model = shows.models[counter]\n      if model.id == 6544\n        console.log \"MODEL\". model\n      lmodel = local_shows.get model.id\n      if lmodel\n        removals.push model\n      counter += 1\n    shows.remove removals\n    \n        \n    @importProgressModel = new ProgressModel\n    @importProgressModel.set 'valuemax', shows.length\n    @importProgressModel.set 'valuenow', 0\n    view = new Marionette.CollectionView\n      channelName: 'tvmaze'\n      collection: shows\n      childView: ShowView\n      childViewTriggers:\n        'item:deleted': 'child:item:deleted'\n        'import:show': 'child:import:show'\n      onChildItemDeleted: =>\n        @importProgressModel.set 'valuemax', shows.length\n      onChildImportShow: (view) =>\n        console.log \"onChildImportShow\", view\n        id = view.model.id\n        includeEpisodes = @ui.includeEpisodes.prop 'checked'\n        show = AppChannel.request 'get-remote-show', id\n        response = show.fetch()\n        response.done ->\n          p = AppChannel.request 'save-local-show', show.toJSON()\n          p.then (result) ->\n            if includeEpisodes\n              console.log \"get episodes too\"\n              console.log show\n              MessageChannel.request \"info\", \"Retrieving episodes....\"\n              ecoll = AppChannel.request 'get-remote-episodes', id\n              response = ecoll.fetch()\n              response.done ->\n                saveEpisodes ecoll, id\n        \n    \n    @showChildView 'showList', view\n    view = new ProgressView\n      model: @importProgressModel\n    @showChildView 'importProgress', view\n  importShows: ->\n    @ui.importButton.hide()\n    @ui.statusDiv.show()\n    console.log \"importShows\"\n    @importAnotherShow()\n  importShow: (show) ->\n    name = show.get 'name'\n    id = show.id\n    @ui.statusDiv.text \"Importing #{name}, #{id}\"\n    rshow = AppChannel.request 'get-remote-show', id\n    response = rshow.fetch()\n    response.done =>\n      p = AppChannel.request 'save-local-show', rshow.toJSON()\n      p.then (result) =>\n        includeEpisodes = @ui.includeEpisodes.prop 'checked'\n        if includeEpisodes\n          console.log \"get episodes too\"\n          console.log rshow\n          MessageChannel.request \"info\", \"Retrieving episodes....\"\n          ecoll = AppChannel.request 'get-remote-episodes', id\n          response = ecoll.fetch()\n          response.done =>\n            saveEpisodes ecoll, id, false\n            shows.remove show\n            @importProgressModel.set 'valuenow', shows.length\n            if shows.length\n              setTimeout =>\n                @importAnotherShow()\n              , 500\n        else\n          shows.remove show\n          @importProgressModel.set 'valuenow', shows.length\n          if shows.length\n            setTimeout =>\n              @importAnotherShow()\n            , 500\n  importAnotherShow: ->\n    show = shows.models[0]\n    @importShow show\n    \nmodule.exports = MainView\n\n"],"sourceRoot":""}