{"version":3,"sources":["webpack:///./src/applets/ebcsv/views/description-views/edit.coffee"],"names":["AppChannel","Backbone","BaseFormView","BootstrapFormView","EditForm","EditFormView","HasAceEditor","MessageChannel","NewFormView","_","make_field_input","make_field_input_ui","make_field_select","navigate_to_url","tc","__webpack_require__","default","Radio","channel","renderable","model","i","len","ref","div","length","style","input","type","value","[object Object]","obj2","uiobject","editor","edit_mode_btn","this","fieldList","extend","mode","editorMode","getSession","setMode","newmode","ui","text","set_edit_mode","content","has","get","setValue","field","set","val","getValue","name","request","id","editorContainer","template","events","click @ui.edit_mode_btn","behaviors","behaviorClass","module","exports"],"mappings":"8EAAA,IAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAL,EAAIM,EAAQ,GACZd,EAAWc,EAAQ,GAEnBZ,EAAoBY,EAAQ,IAA2BC,QAEvDL,EAAsBI,EAAQ,KAAmCC,QACjEH,EAAkBE,EAAQ,IAA+BC,QACzDV,EAAeS,EAAQ,KAAwBC,QAE/BD,EAAQ,KACdA,EAAQ,KAGlBD,EAAKC,EAAQ,KACXL,mBACAE,qBAAsBG,EAAQ,KAElBd,EAASgB,MAAMC,QAAQ,UACrCX,EAAiBN,EAASgB,MAAMC,QAAQ,YACxClB,EAAaC,EAASgB,MAAMC,QAAQ,SAEpCd,EAAWU,EAAGK,WAAW,SAACC,GACxB,IAAAC,EAAAC,EAAAC,EACA,IADAT,EAAGU,IAAI,mBAAoB,YAC3BH,EAAA,EAAAC,GAAAC,GAAA,iBAAAE,OAAAJ,EAAAC,EAAAD,IACEX,QAAwBU,UAC1BN,EAAGU,IAAI,sCAAuC,6BAC9CV,EAAGU,IAAI,eAAeE,MAAM,8CAC5BZ,EAAGa,MAAM,oBAAoBC,KAAK,SAAUC,MAAM,WAClDf,EAAGU,IAAI,oCAGHtB,EAAA,iBAANA,UAA2BC,EAKzB2B,KACE,IAAAC,EAAAC,EAKA,OALAD,GACEE,OAAQ,cACRC,cAAe,uBACjBF,EAAWrB,EAAoBwB,KAACC,WAChC3B,EAAE4B,OAAOL,EAAUD,GACZC,EAOTF,cAAgBQ,UACdH,KAACI,WAAaD,EACJH,KAACF,OAAOO,aACVC,oBAAoBN,KAACI,cAE/BT,mBACE,IAAAY,SAAAP,KAACQ,GAAGT,cAAcU,kBAAkBT,KAACI,mBAEnCG,EADgB,aAAfP,KAACI,WACQ,aAEA,WACZJ,KAACU,cAAcH,GAEjBZ,kBACE,IAAAgB,EACA,GADAX,KAACU,cAAcV,KAACI,YACbJ,KAACf,MAAM2B,IAAI,kBACZD,EAAUX,KAACf,MAAM4B,IAAI,WACrBb,KAACF,OAAOgB,SAASH,GAErBhB,cACE,IAAAoB,EAAA7B,EAAAC,EAAAC,EAAA,IAAAF,EAAA,EAAAC,GAAAC,EAAAY,KAAAC,WAAAX,OAAAJ,EAAAC,EAAAD,WACEc,KAACf,MAAM+B,IAAID,EAAOf,KAACQ,GAAGO,GAAOE,cAE/BjB,KAACf,MAAM+B,IAAI,UAAWhB,KAACF,OAAOoB,YAEhCvB,UAAYV,GACV,IAAAkC,WAAOlC,EAAM4B,IAAI,QACjBzC,EAAegD,QAAQ,aAAcD,yBACrCzC,8BAA4CO,EAAMoC,0BA7CpDjB,WAAY,uBACZkB,gBAAiB,yBACjBrB,WAAY,OAAQ,qBACpBsB,SAAUtD,cAQVuD,QACEC,0BAA2B,gCAC7BC,WACEvD,cACEwD,cAAexD,kBAgCfE,gBAAoBN,EACxB4B,cAGE,OADQ,IADK9B,EAAWuD,QAAQ,0BACTnC,SAGrBf,gBAAqBH,EAEzB4B,qBACEK,KAACf,QAEL2C,EAAOC,SACLxD,YAAaA,EACbH,aAAcA","file":"ebcsv-view-add-dsc-ee1241e13cee17621481.js","sourcesContent":["_ = require 'underscore'\nBackbone = require 'backbone'\n\nBootstrapFormView = require('tbirds/views/bsformview').default\n\nmake_field_input_ui = require('tbirds/util/make-field-input-ui').default\nnavigate_to_url = require('tbirds/util/navigate-to-url').default\nHasAceEditor = require('tbirds/behaviors/ace').default\n\nmarkdown_mode = require 'brace/mode/markdown'\nhb_mode = require 'brace/mode/handlebars'\n\n\ntc = require 'teacup'\n{ make_field_input\n  make_field_select } = require 'tbirds/templates/forms'\n\nMainChannel = Backbone.Radio.channel 'global'\nMessageChannel = Backbone.Radio.channel 'messages'\nAppChannel = Backbone.Radio.channel 'ebcsv'\n\nEditForm = tc.renderable (model) ->\n  tc.div '.listview-header', 'Document'\n  for field in ['name', 'title']\n    make_field_input(field)(model)\n  tc.div '#editor-mode-button.btn.btn-default', 'Change to handlebars mode'\n  tc.div '#ace-editor', style:'position:relative;width:100%;height:40em;'\n  tc.input '.btn.btn-default', type:'submit', value:\"Submit\"\n  tc.div '.spinner.fa.fa-spinner.fa-spin'\n  \n\nclass BaseFormView extends BootstrapFormView\n  editorMode: 'markdown'\n  editorContainer: 'ace-editor'\n  fieldList: ['name', 'title']\n  template: EditForm\n  ui: ->\n    obj2 =\n      editor: '#ace-editor'\n      edit_mode_btn: '#editor-mode-button'\n    uiobject = make_field_input_ui @fieldList\n    _.extend uiobject, obj2\n    return uiobject\n  events:\n    'click @ui.edit_mode_btn': 'change_edit_mode'\n  behaviors:\n    HasAceEditor:\n      behaviorClass: HasAceEditor\n\n  set_edit_mode: (mode) ->\n    @editorMode = mode\n    session = @editor.getSession()\n    session.setMode \"ace/mode/#{@editorMode}\"\n    \n  change_edit_mode: ->\n    @ui.edit_mode_btn.text \"Change to #{@editorMode} mode\"\n    if @editorMode == 'markdown'\n      newmode = 'handlebars'\n    else\n      newmode = 'markdown'\n    @set_edit_mode newmode\n    \n  afterDomRefresh: () ->\n    @set_edit_mode @editorMode\n    if @model.has 'content'\n      content = @model.get 'content'\n      @editor.setValue content\n\n  updateModel: ->\n    for field in @fieldList\n      @model.set field, @ui[field].val()\n    # update from ace-editor\n    @model.set 'content', @editor.getValue()\n\n  onSuccess: (model) ->\n    name = model.get 'name'\n    MessageChannel.request 'success', \"#{name} saved successfully.\"\n    navigate_to_url \"#ebcsv/descriptions/view/#{model.id}\"\n    \nclass NewFormView extends BaseFormView\n  createModel: ->\n    collection = AppChannel.request 'get_local_descriptions'\n    model = new collection.model\n    return model\n\nclass EditFormView extends BaseFormView\n  # the model should be assigned in the controller\n  createModel: ->\n    @model\n    \nmodule.exports =\n  NewFormView: NewFormView\n  EditFormView: EditFormView\n  \n\n#############################\n"],"sourceRoot":""}