{"version":3,"sources":["webpack:///./src/applets/ebcsv/views/uploadxml.coffee","webpack:///./node_modules/tbirds/src/templates/forms.coffee"],"names":["AppChannel","Backbone","DropZoneView","MessageChannel","SampleComicsModel","dropzone_template","make_field_input","make_field_select","navigate_to_url","tc","boundMethodCheck","instance","Constructor","Error","__webpack_require__","default","Radio","channel","renderable","model","article","div","text","button","style","input","type","span","Model","[object Object]","options","dataType","super","fetch","response","content","url","Marionette","View","successfulParse","this","bind","xmlReaderOnLoad","event","console","log","ui","file_input","val","chosen_btn","hide","show","file","preventDefault","$el","css","originalEvent","dataTransfer","files","status_msg","name","droppedFile","parse_btn","stopPropagation","reader","FileReader","onload","readAsText","target","result","request","done","xml","get","fail","danger","template","sampleComicsBtn","events","dragover","dragenter","drop","click @ui.parse_btn","click @ui.file_input","change @ui.file_input","click @ui.chosen_btn","click @ui.sampleComicsBtn","module","exports","form_group_input_div","login_form","make_field_textarea","make_login_form","name_content_form","_util_capitalize__WEBPACK_IMPORTED_MODULE_1__","teacup__WEBPACK_IMPORTED_MODULE_0___default","a","data","atts","input_type","selector","label","for","input_id","input_attributes","field","Object","placeholder","value","optlist","select","i","len","opt","results","length","option","selected","action","method","user","form","role","textarea"],"mappings":"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","file":"ebcsv-view-upload-xml-view-a9451354b26dd5e14eb2.js","sourcesContent":["Backbone = require 'backbone'\nMarionette = require 'backbone.marionette'\nMasonry = require 'masonry-layout'\ntc = require 'teacup'\n\nnavigate_to_url = require('tbirds/util/navigate-to-url').default\n{ make_field_input\n  make_field_select } = require 'tbirds/templates/forms'\n\n\nMainChannel = Backbone.Radio.channel 'global'\nMessageChannel = Backbone.Radio.channel 'messages'\nAppChannel = Backbone.Radio.channel 'ebcsv'\n\n########################################\ndropzone_template = tc.renderable (model) ->\n  tc.article '.document-view.content', ->\n    tc.div '.body', ->\n      tc.div '.card', ->\n        tc.div '.card-header', ->\n          tc.text 'Drop an xml file, or use the '\n          tc.button '.sample-comics-button.btn.btn-default', \"Example data.\"\n        tc.div '.card-body', ->\n          tc.div '.parse-btn.btn.btn-default', style:'display:none', ->\n            tc.text 'Parse Dropped File'\n          tc.input '.xml-file-input.input', type:'file'\n          tc.span '.parse-chosen-button.btn.btn-default',\n          style:'display:none', ->\n            tc.text 'Parse input file.'\n  \nclass SampleComicsModel extends Backbone.Model\n  url: '/assets/documents/sample-comics.xml'\n  fetch: (options) ->\n    options = options or {}\n    options.dataType = 'text'\n    return super options\n  parse: (response, options) ->\n    return content: response\n            \nclass DropZoneView extends Backbone.Marionette.View\n  template: dropzone_template\n  droppedFile: null\n  ui:\n    status_msg: '.card-header'\n    file_input: '.xml-file-input'\n    parse_btn: '.parse-btn'\n    chosen_btn: '.parse-chosen-button'\n    sampleComicsBtn: '.sample-comics-button'\n  events:\n    'dragover': 'handle_dragOver'\n    'dragenter': 'handle_dragEnter'\n    'drop': 'handle_drop'\n    'click @ui.parse_btn': 'parse_xml'\n    'click @ui.file_input': 'file_input_clicked'\n    'change @ui.file_input': 'file_input_changed'\n    'click @ui.chosen_btn': 'parse_chosen_xml'\n    'click @ui.sampleComicsBtn': 'parse_sample_xml'\n    \n    \n\n  # https://stackoverflow.com/a/12102992\n  file_input_clicked: (event) ->\n    console.log \"file_input_clicked\", event\n    @ui.file_input.val null\n    @ui.chosen_btn.hide()\n\n  file_input_changed: (event) ->\n    console.log \"file_input_changed\", event\n    @ui.chosen_btn.show()\n    \n  handle_drop: (event) ->\n    event.preventDefault()\n    @$el.css 'border', '0px'\n    dt = event.originalEvent.dataTransfer\n    file = dt.files[0]\n    #console.log 'file is', file\n    @ui.status_msg.text \"File: #{file.name}\"\n    @droppedFile = file\n    @ui.parse_btn.show()\n    \n  handle_dragOver: (event) ->\n    event.preventDefault()\n    event.stopPropagation()\n    \n  handle_dragEnter: (event) ->\n    event.stopPropagation()\n    event.preventDefault()\n    @$el.css 'border', '2px dotted'\n\n  successfulParse: =>\n    @ui.status_msg.text \"Parse Successful\"\n    if __DEV__\n      window.comics = AppChannel.request 'get-comics'\n    navigate_to_url \"#ebcsv\"\n\n  parse_chosen_xml: ->\n    @ui.status_msg.text \"Reading xml file...\"\n    filename = @ui.file_input.val()\n    #console.log \"PARSE #{filename}\"\n    fi = @ui.file_input\n    #console.log 'fi', fi, fi[0].files\n    file = @ui.file_input[0].files[0]\n    reader = new FileReader()\n    reader.onload = @xmlReaderOnLoad\n    reader.readAsText file\n    @ui.parse_btn.hide()\n    \n  xmlReaderOnLoad: (event) =>\n    content = event.target.result\n    @ui.status_msg.text 'Parsing xml.....'\n    AppChannel.request 'parse-comics-xml', content, @successfulParse\n    \n  parse_xml: ->\n    @ui.status_msg.text \"Reading xml file...\"\n    #console.log \"PARSE #{@droppedFile.name}\"\n    reader = new FileReader()\n    reader.onload = @xmlReaderOnLoad\n    reader.readAsText(@droppedFile)\n    @ui.parse_btn.hide()\n    \n  parse_sample_xml: ->\n    model = new SampleComicsModel()\n    response = model.fetch()\n    @ui.status_msg.text \"Retrieving xml....\"\n    response.done =>\n      @ui.status_msg.text \"Parsing xml....\"\n      xml = model.get 'content'\n      AppChannel.request 'parse-comics-xml', xml, @successfulParse\n    response.fail =>\n      @ui.status_msg.text \"Something failed.\"\n      MessageChannel.danger \"Failed to parse sample comics\"\n      \n    \nmodule.exports = DropZoneView\n\n\n","import tc from 'teacup'\n\nimport capitalize from '../util/capitalize'\n\nif __useCssModules__\n  require \"../../sass/forms.scss\"\n\n########################################\n# Form Templates\n########################################\nform_group_input_div = tc.renderable (data) ->\n  tc.div '.form-group', ->\n    tc.label '.control-label',\n      for:data.input_id\n      data.label\n    selector = \"##{data.input_id}.form-control\"\n    atts = data.input_attributes\n    input_type = tc.input\n    if data?.input_type\n      input_type = tc[data.input_type]\n      input_type selector, atts, ->\n        tc.text data?.content\n    else\n      input_type selector, atts\n\nmake_field_input = (field) ->\n  tc.renderable (model) ->\n    form_group_input_div\n      input_id: \"input_#{field}\"\n      label: capitalize field\n      input_attributes:\n        name: field\n        placeholder: field\n        value: model[field]\n    \nmake_field_textarea = (field) ->\n  tc.renderable (model) ->\n    form_group_input_div\n      input_id: \"input_#{field}\"\n      input_type: 'textarea'\n      label: capitalize field\n      input_attributes:\n        name: field\n        placeholder: field\n      content: model[field]\n\nmake_field_select = (field, optlist) ->\n  tc.renderable (model) ->\n    tc.div '.form-group', ->\n      tc.label '.control-label',\n        for:\"select_#{field}\"\n      capitalize field\n    tc.select '.form-control', name:\"select_#{field}\", ->\n      for opt in optlist\n        if model[field] is opt\n          tc.option selected:null, value:opt, opt\n        else\n          tc.option value:opt, opt\n          \nmake_login_form = (action='/login', method='POST') ->\n  tc.renderable (user) ->\n    tc.form\n      role:'form'\n      method: method\n      action: action, ->\n        form_group_input_div\n          input_id: 'input_username'\n          label: 'User Name'\n          input_attributes:\n            name: 'username'\n            placeholder: 'User Name'\n        form_group_input_div\n          input_id: 'input_password'\n          label: 'Password'\n          input_attributes:\n            name: 'password'\n            type: 'password'\n            placeholder: 'Type your password here....'\n        tc.button '.btn.btn-secondary', type:'submit', 'login'\n\nlogin_form = make_login_form()\n\nname_content_form = tc.renderable (model) ->\n  form_group_input_div\n    input_id: 'input_name'\n    label: 'Name'\n    input_attributes:\n      name: 'name'\n      placeholder: 'Name'\n  form_group_input_div\n    input_id: 'input_content'\n    input_type: tc.textarea\n    label: 'Content'\n    input_attributes:\n      name: 'content'\n      placeholder: '...'\n  tc.input '.btn.btn-secondary.btn-sm', type:'submit', value:'Add'\n\n########################################\nexport {\n  form_group_input_div\n  make_field_input\n  make_field_textarea\n  make_field_select\n  make_login_form\n  login_form\n  name_content_form\n  }\n  \n"],"sourceRoot":""}