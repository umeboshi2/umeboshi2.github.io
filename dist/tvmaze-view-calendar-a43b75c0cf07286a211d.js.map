{"version":3,"sources":["webpack:///./src/applets/tvmaze/views/calendar-view.coffee"],"names":["$","AppChannel","Backbone","EpisodeCalendarView","MainChannel","episodeCalendar","getEpisodes","lf","loading_calendar_events","moment","render_calendar_event","tc","boundMethodCheck","instance","Constructor","Error","__webpack_require__","Radio","channel","renderable","div","h2","i","text","calEvent","element","url","showId","css","cursor","font-size","font-family","bool","header","loading","show","hide","start","end","timezone","cb","Collection","conn","endDate","filters","q","startDate","table","request","getSchema","window","startMoment","toDate","push","airdate","gte","lte","select","from","where","op","and","console","log","exec","then","results","collection","episodes","events","set","toJSON","forEach","episode","data","runtime","id","show_id","title","name","allDay","add","Marionette","View","calendarViewRender","this","bind","[object Object]","ui","calendar","fullCalendar","view","calEventClick","date","event","options","minicalendar","layout","region","history","navigate","trigger","defaultDate","left","center","right","theme","defaultView","eventSources","eventRender","viewRender","eventClick","template","daytop","module","exports"],"mappings":"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","file":"tvmaze-view-calendar-a43b75c0cf07286a211d.js","sourcesContent":["$ = require 'jquery'\nBackbone = require 'backbone'\nMarionette = require 'backbone.marionette'\nlf = require 'lovefield'\nmoment = require 'moment'\n\nFullCalendar = require 'fullcalendar'\nrequire 'fullcalendar/dist/fullcalendar.css'\n\napiroot = '/foo/bar'\n\nMainChannel = Backbone.Radio.channel 'global'\nAppChannel = Backbone.Radio.channel 'tvmaze'\n\nHubChannel = Backbone.Radio.channel 'hubby'\n\n#################################\n# templates\n#################################\n\ntc = require 'teacup'\n\nepisodeCalendar = tc.renderable () ->\n  tc.div '.listview-header', 'Episodes'\n  tc.div '.loading', ->\n    tc.h2 ->\n      tc.i '.fa.fa-spinner.fa-spin'\n      tc.text 'Loading Episodes'\n  tc.div '.maincalendar'\n\n#################################\n\nrender_calendar_event = (calEvent, element) ->\n  calEvent.url = \"#tvmaze/shows/view/#{calEvent.showId}\"\n  element.css\n    cursor: 'pointer'\n    'font-size': '0.9em'\n    'font-family': 'Rambla'\n    \n  \nloading_calendar_events = (bool) ->\n  loading = $ '.loading'\n  header = $ '.fc-toolbar'\n  if bool\n    loading.show()\n    header.hide()\n  else\n    loading.hide()\n    header.show()\n\nloading_test = (bool) ->\n  console.log \"loading_test\", bool\n\ngetEpisodes = (start, end, timezone, cb) ->\n  Model = AppChannel.request 'get-local-episode-model'\n  Collection = AppChannel.request 'get-local-episode-collection'\n  conn = MainChannel.request 'main:app:dbConn', 'tvmaze'\n  table = conn.getSchema().table('TVMazeEpisode')\n  filters = []\n  window.startMoment = start\n  startDate = start.toDate()\n  endDate = end.toDate()\n  filters.push table.airdate.gte(start)\n  filters.push table.airdate.lte(end)\n  q = conn.select().from(table)\n  #.where(lf.op.and(filters))\n  .where(lf.op.and( table.airdate.gte(start.toDate()),\n    table.airdate.lte(end.toDate())))\n  console.log \"Q\", q, startDate, endDate\n  q = q.exec()\n  console.log \"Q\", q\n  q.then (results) ->\n    console.log \"RESULTS\", results\n    collection = new Collection\n    collection.set results\n    episodes = collection.toJSON()\n    console.log \"collection\", collection\n    events = []\n    episodes.forEach (episode) ->\n      airdate = moment(episode.airdate)\n      # default to thirty minutes if no runtime\n      runtime = episode.runtime or 30\n      data =\n        id: episode.id\n        showId: episode.show_id\n        title: episode.name\n        allDay: false\n        start: airdate\n        end: airdate.add(runtime, 'minutes')\n        url: \"#tvmaze/shows/view/#{episode.show_id}\"\n      events.push data\n    cb events\n    \n  \nclass EpisodeCalendarView extends Backbone.Marionette.View\n  template: episodeCalendar\n  ui:\n    calendar: '.maincalendar'\n    loading: '.loading'\n    header: '.fc-toolbar'\n    daytop: '.fc-day-top'\n    \n  options:\n    minicalendar: false\n    layout: false\n\n  onBeforeDestroy: ->\n    cal = @ui.calendar.fullCalendar 'destroy'\n    console.log \"calendar destroyed\"\n\n  calendarViewRender: (view, element) =>\n    AppChannel.request 'maincalendar:set-date', @ui.calendar\n    \n  onDomRefresh: () ->\n    calEventClick = (event) =>\n      if not @options.minicalendar\n        url = event.url\n        console.log \"EVENT URL\", event, url\n        Backbone.history.navigate url, trigger: true\n      else\n        options =\n          layout: @options.layout\n          region: 'episode'\n          id: event.id\n\n        AppChannel.request 'view-episode', options\n    date = AppChannel.request 'maincalendar:get-date' or new Date()\n    cal = @ui.calendar\n    cal.fullCalendar\n      defaultDate: date\n      header:\n        left: 'prevYear, nextYear'\n        center: 'title'\n        right: 'prev, next'\n      theme: false\n      defaultView: 'month'\n      eventSources:[\n        {\n          events: getEpisodes\n        }\n      ]\n      eventRender: render_calendar_event\n      viewRender: @calendarViewRender\n      loading: loading_calendar_events\n      eventClick: calEventClick\n    console.log \"we should either be fetching events, or refetching\"\n\n    \nmodule.exports = EpisodeCalendarView\n  \n"],"sourceRoot":""}