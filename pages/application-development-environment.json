{"content": "# Application Development Environment\n\n## CoffeeScript\n\n[CoffeeScript](http://coffeescript.org/) is used as the language \nof choice for developing applications with \n[Backbone.Marionette](http://marionettejs.com/).  When I began \nnoticing the necessity of learning javascript to achieve a \nbetter application platform, I decided to use coffeescript for \na large number of reasons.  I had already been hesitant to use \njavascript, so being a python developer, I started by looking \nat javascript alternatives that would allow me to perform \nclient side development without a heavy investment into learning \nanother language.  I came across some projects that took a \npython file and compiled it into javascript, but this turned \nout to be a greater hassle than expected.\n\nI happened to chance upon coffee script one day and decided to \ntry it out.  While I was initially using it to provide a \nwhitespace environment for creating javascript, I found that\nthe coffeescript language provides a lot of valuable assistance to a \nperson learning to program in a javascript environment.  Not \nonly does the syntactic sugar provide for cleaner and more \nreadable code, it also provides readable reliability when performing \nsome common actions that are a bit tricky to do correctly in \njavascript, such as testing for *undefined*.  Even more valuable \nis the default behaviour to wrap the code in an anonymous function,\nand also forcing every variable to be declared locally on first chance \nin that anonymous function, making it very difficult to pollute \nthe global namespace accidentally.\n\n\n## Backbone.Marionette\n\nMarionette is the main application framework.  Marionette makes \nit easier to organize application code into smaller more \nmanageable module.  It uses a communication mechanism to \ndecouple the components of the application, making it easier to \ndevelop each part separately.\n\n### Application Skeleton\n\n- **main (main-local)**\n  This is where the requirejs config is located.  This file is \n  responsible for importing the application module and starting\n  the application.\n- **application**\n  - This module is responsible for the initial setup of the application.\n  - This module sets the AppRegions for the main page.\n  - It starts the AppRouters of all the sub applications.\n  - If logins are used, this module sets the handler for the user info\n\tand starts the app after fetching the user info.\n- **models** and **collections**\n  These provide access to models and collections that are \n  global to the application, such as \"current user info\" for\n  the logged in user.\n- **msgbus**\n  This is the global message bus that allows communication \n  between the main application and the sub apps.\n\n### Child Application Skeleton\n\n- main.coffee\n- models and collections\n\n### Frontdoor Application\n\nThe frontdoor application is the default child application.  One\nchild application must exist to perform the function of an \"index.html\"\npage.\n\n\n", "id": "application-development-environment"}